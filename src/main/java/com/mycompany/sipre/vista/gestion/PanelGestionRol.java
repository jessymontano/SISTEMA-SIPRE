/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.sipre.vista.gestion;

import com.mycompany.sipre.controlador.UsuarioController;
import com.mycompany.sipre.modelo.Usuario;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author angel
 */
public class PanelGestionRol extends javax.swing.JPanel {

    private List<Usuario> usuarios;

    /**
     * Creates new form PanelGestionRol
     */
    public PanelGestionRol() {
        initComponents();
        actualizarTabla();

        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {
                actualizarTabla(); // Refrescar datos al mostrarse
            }
        });
    }

    //llenar tabla automaticamente con todas las solicitudes encontradas
    private void actualizarTabla() {
        UsuarioController controller = new UsuarioController();
        controller.obtenerTodosLosUsuarios(usuariosActualizados -> {
            this.usuarios = usuariosActualizados;

            SwingUtilities.invokeLater(() -> {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.setRowCount(0); // Limpiar tabla

                for (Usuario usuario : usuariosActualizados) {
                    model.addRow(new Object[]{
                        usuario.getNombre(),
                        usuario.getApellido(),
                        usuario.getEmail(),
                        usuario.getRol(),
                        "Modificar",});
                }

                jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        fieldNombre = new javax.swing.JTextField();
        fieldEmail = new javax.swing.JTextField();
        fieldApellido = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        fieldContrasena = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        FieldNombre = new javax.swing.JTextField();
        comboRoles = new javax.swing.JComboBox<>(new String[]{"administrador", "consultador", "registrador"});
        comboRoles.setSelectedIndex(-1);
        jLabel11 = new javax.swing.JLabel();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setTitle("Modificar rol");
        jDialog1.setAlwaysOnTop(true);
        jDialog1.setBackground(null);
        jDialog1.setMaximumSize(new java.awt.Dimension(500, 300));
        jDialog1.setModal(true);
        jDialog1.setPreferredSize(new java.awt.Dimension(500, 300));
        jDialog1.pack();
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel11.setText("Rol:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 72, 0, 0);
        jDialog1.getContentPane().add(jLabel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 0);
        jDialog1.getContentPane().add(comboRoles, gridBagConstraints);

        jLabel8.setText("Apellido: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 72, 0, 0);
        jDialog1.getContentPane().add(jLabel8, gridBagConstraints);

        btnGuardar.setBackground(new java.awt.Color(99, 132, 182));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(255, 255, 255));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(26, 45, 75, 0);
        jDialog1.getContentPane().add(btnGuardar, gridBagConstraints);

        jLabel3.setText("Nombre: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 72, 0, 0);
        jDialog1.getContentPane().add(jLabel3, gridBagConstraints);

        jLabel9.setText("Email: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 72, 0, 0);
        jDialog1.getContentPane().add(jLabel9, gridBagConstraints);

        fieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNombreActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 152;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(31, 18, 0, 132);
        jDialog1.getContentPane().add(fieldNombre, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 0);
        jDialog1.getContentPane().add(fieldEmail, gridBagConstraints);

        fieldApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldApellidoActionPerformed(evt);
            }
        });


        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 0);
        jDialog1.getContentPane().add(fieldApellido, gridBagConstraints);

        jLabel10.setText("Contrase√±a:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 72, 0, 0);
        jDialog1.getContentPane().add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 151;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 18, 0, 0);
        jDialog1.getContentPane().add(fieldContrasena, gridBagConstraints);

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Gestionar Roles");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 76;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 214, 0, 0);
        add(jLabel1, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Nombre", "Apellido", "Email", "Rol", "Modificar"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean[]{
                false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit[columnIndex];
            }
        });
        jTable1.getColumnModel().getColumn(4).setCellRenderer(new ButtonRenderer("Modificar"));
        jTable1.getColumnModel().getColumn(4).setCellEditor(new ButtonEditor(new JCheckBox(), "Modificar"));
        jTable1.setRowHeight(30);
        jTable1.getTableHeader().setDefaultRenderer(new DefaultTableCellRenderer() {
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                setBackground(new Color(77, 77, 77));
                setForeground(Color.WHITE);
                setFont(new Font("Segoe UI", Font.BOLD, 12));
                return this;
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 601;
        gridBagConstraints.ipady = 229;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 0, 11);
        add(jScrollPane1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(99, 132, 182));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 2, 0, 0);
        add(jButton2, gridBagConstraints);

        jLabel2.setText("Buscar por nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 165, 0, 0);
        add(jLabel2, gridBagConstraints);

        FieldNombre.setMaximumSize(new java.awt.Dimension(100, 22));
        FieldNombre.setMinimumSize(new java.awt.Dimension(100, 22));
        FieldNombre.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 0, 0);
        add(FieldNombre, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // buscar por folio
        actualizarTabla();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int rowCount = model.getRowCount();

        for (int i = 0; i < rowCount; i++) {
            String nombre = model.getValueAt(i, 0).toString();
            if (nombre.equals(FieldNombre.getText())) { //si el folio es igual seleccionar el rengl√≥n
                jTable1.setRowSelectionInterval(i, i);
                jTable1.scrollRectToVisible(new Rectangle(jTable1.getCellRect(i, 0, true)));
                return;
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void fieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNombreActionPerformed

    private void fieldApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldApellidoActionPerformed

    private void fieldRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldRolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldRolActionPerformed

    // clase para mostrar botones en la tabla
    class ButtonRenderer extends JButton implements TableCellRenderer {

        private String actionType;

        public ButtonRenderer(String actionType) {
            this.actionType = actionType;
            setContentAreaFilled(false);
            setBorderPainted(false);
            setFocusPainted(false);
            setOpaque(true);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            if (isSelected) {
                setBackground(table.getSelectionBackground());
            } else {
                setBackground(new java.awt.Color(99, 132, 182));
            }

            if ("Modificar".equals(actionType)) {
                ImageIcon icono = new ImageIcon(getClass().getResource("/edit.png"));
                Image image = icono.getImage();
                Image nuevaImagen = image.getScaledInstance(20, 20, Image.SCALE_SMOOTH);
                icono = new ImageIcon(nuevaImagen);
                setIcon(icono);
            }
            return this;
        }
    }

    // clase para hacer que funcionen los botones dentro de la tabla y obtengan la informaci√≥n del usuario seleccionado
    class ButtonEditor extends DefaultCellEditor {

        private JButton button;
        private boolean isPushed;
        private int selectedRow;
        private String actionType;

        public ButtonEditor(JCheckBox checkBox, String actionType) {
            super(checkBox);
            this.actionType = actionType;
            button = new JButton();
            button.setContentAreaFilled(false);
            button.setBorderPainted(false);
            button.setFocusPainted(false);
            button.setOpaque(true);

            if ("Modificar".equals(actionType)) {
                ImageIcon icono = new ImageIcon(getClass().getResource("/edit.png"));
                Image image = icono.getImage();
                Image nuevaImagen = image.getScaledInstance(20, 20, Image.SCALE_SMOOTH);
                icono = new ImageIcon(nuevaImagen);
                button.setIcon(icono);
            }
            button.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    if ("Modificar".equals(actionType)) {
                        abrirFormulario(selectedRow);
                    }
                    fireEditingStopped();
                }
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            selectedRow = row;
            return button;
        }

        @Override
        public Object getCellEditorValue() {
            return actionType;
        }

    }

    // abre un nuevo jDialog con un formulario para editar la informaci√≥n del usuario
    private void abrirFormulario(int rowIndex) {
        Usuario usuario = usuarios.get(rowIndex);

        // insertar datos anteriores
        fieldNombre.setText(usuario.getNombre());
        fieldApellido.setText(usuario.getApellido());
        fieldEmail.setText(usuario.getEmail());
        comboRoles.setSelectedItem(usuario.getRol());
        fieldContrasena.setText("");

        // Deshabilitar edici√≥n
        fieldNombre.setEnabled(false);
        fieldApellido.setEnabled(false);
        fieldEmail.setEnabled(false);
        fieldContrasena.setEnabled(false);
        comboRoles.setEnabled(true);

        jDialog1.setTitle("Modificar Rol: " + usuario.getNombre());
        jDialog1.setSize(500, 400);
        jDialog1.setLocationRelativeTo(this);

        for (ActionListener al : btnGuardar.getActionListeners()) {
            btnGuardar.removeActionListener(al);
        }

        btnGuardar.addActionListener(e -> {
            

            String nuevoRol = (String) comboRoles.getSelectedItem();
            UsuarioController controller = new UsuarioController();

            controller.modificarRolDeUsuario(usuario.getId(), nuevoRol, success -> {
                if (success) {
                    usuario.setRol(nuevoRol);
                    usuarios.set(rowIndex, usuario);
                    JOptionPane.showMessageDialog(jDialog1, "Rol actualizado exitosamente");
                    actualizarTabla();
                    jDialog1.dispose();
                } else {
                    JOptionPane.showMessageDialog(jDialog1, "Error al actualizar", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });
        });

        jDialog1.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FieldNombre;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JTextField fieldApellido;
    private javax.swing.JTextField fieldContrasena;
    private javax.swing.JComboBox<String> comboRoles;
    private javax.swing.JTextField fieldEmail;
    private javax.swing.JTextField fieldNombre;
    private javax.swing.JButton jButton2;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;

    // End of variables declaration//GEN-END:variables
}
