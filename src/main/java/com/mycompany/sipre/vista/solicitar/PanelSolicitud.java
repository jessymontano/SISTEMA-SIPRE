/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.sipre.vista.solicitar;

import com.mycompany.sipre.controlador.DocumentoController;
import com.mycompany.sipre.controlador.GeneradorPDF;
import com.mycompany.sipre.controlador.SolicitudController;
import com.mycompany.sipre.controlador.TipoController;
import com.mycompany.sipre.modelo.Documento;
import com.mycompany.sipre.modelo.Solicitud;
import com.mycompany.sipre.modelo.TipoFormatoPreimpreso;
import com.mycompany.sipre.modelo.Usuario;
import java.awt.event.ActionEvent;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.IOException;

import javax.swing.*;
import java.sql.Date;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author jessica
 */
public class PanelSolicitud extends javax.swing.JPanel {
    
    TipoController tipoController = new TipoController();
    Usuario usuario;
    String hoy;
    /**
     * Creates new form PanelSolicitud
     */
    public PanelSolicitud(JFrame frames, Usuario usuario) {
        initComponents();
        LocalDate fechaHoy = LocalDate.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        hoy = fechaHoy.format(formatter);
        this.usuario = usuario;
        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentShown(ComponentEvent e) {;
                cargarTiposDocumento();
            }
        });
    }
    
    private void cargarTiposDocumento() {
        tipoController.obtenerTipos(tipos -> {
            if (tipos != null) {
                if (tipos != null) {
                ComboTipo.removeAllItems();
                for (TipoFormatoPreimpreso tipo : tipos) {
                    ComboTipo.addItem(tipo.getNombre());
                }
            }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        FieldFolio = new javax.swing.JTextField();
        ComboTipo = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel(hoy);
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setPreferredSize(new java.awt.Dimension(600, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setBackground(new java.awt.Color(99, 132, 182));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Enviar solicitud");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 140, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Solicitud de impresión");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(166, 39, -1, -1));

        jLabel2.setText("Folio:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 70, -1, -1));

        jLabel3.setText("Tipo de documento:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 104, -1, -1));

        jLabel4.setText("Fecha de solicitud:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 135, -1, -1));

        FieldFolio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FieldFolioActionPerformed(evt);
            }
        });
        add(FieldFolio, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 67, 223, -1));
        add(ComboTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(228, 101, 140, -1));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Limpiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 270, -1, -1));

        jLabel5.setText("Motivo:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 163, -1, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setMaximumSize(new java.awt.Dimension(200, 84));
        jTextArea1.setMinimumSize(new java.awt.Dimension(200, 84));
        jTextArea1.setPreferredSize(new java.awt.Dimension(200, 84));
        jScrollPane2.setViewportView(jTextArea1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 163, 270, 90));
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, 100, -1));

        jLabel7.setText(hoy);
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {
        try {
        String folioText = FieldFolio.getText().trim();
        if (folioText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Folio no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int folio = Integer.parseInt(folioText);
        String motivo = jTextArea1.getText().trim();
        
        if (motivo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo Motivo no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener el tipo de documento seleccionado
        String nombreTipoDocumento = (String) ComboTipo.getSelectedItem();
        SolicitudController solicitudController = new SolicitudController();
        
        // Primero obtener el ID del tipo
        solicitudController.obtenerIdTipoPorNombre(nombreTipoDocumento, idTipo -> {
            if (idTipo == -1) {
                JOptionPane.showMessageDialog(this, "Tipo de documento no válido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
        java.util.Date fechaHoy = java.sql.Date.valueOf(LocalDate.now());
            // Ahora agregar la solicitud con el ID_Tipo
            solicitudController.agregarSolicitud(
                folio, 
                idTipo, 
                fechaHoy, 
                motivo, 
                usuario.getId(), 
                resultado -> {
                    if (resultado) {
                        JOptionPane.showMessageDialog(this, "Solicitud guardada con éxito!");
                        // Generar PDF (opcional)
                        GeneradorPDF.mostrarPDFEnNavegador(folio, nombreTipoDocumento, fechaHoy, motivo);
                    } else {
                        JOptionPane.showMessageDialog(this, "El documento ya fue solicitado.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            );
        });

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ingrese un folio válido.", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, "Error en la fecha seleccionada.", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }


    private void FieldFolioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FieldFolioActionPerformed
        try {
        int folio = Integer.parseInt(FieldFolio.getText().trim());
        DocumentoController documentoController = new DocumentoController();

        documentoController.obtenerDocumentoPorFolio(folio, documento -> {
            if (documento != null) {
                String tipoDoc = documento.getTipoDocumento();
                // Buscar el ítem en el ComboBox que coincida con el tipoDoc
                for (int i = 0; i < ComboTipo.getItemCount(); i++) {
                    if (ComboTipo.getItemAt(i).equalsIgnoreCase(tipoDoc)) {
                        ComboTipo.setSelectedIndex(i);
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, 
                    "Tipo de documento no encontrado en la lista: " + tipoDoc, 
                    "Advertencia", 
                    JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, 
                    "Documento no encontrado con ese folio.", 
                    "Error", 
                    JOptionPane.ERROR_MESSAGE);
            }
        });
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, 
            "Folio inválido.", 
            "Error", 
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_FieldFolioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FieldFolio.setText("");
        jTextArea1.setText("");
        ComboTipo.setSelectedIndex(0);

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboTipo;
    private javax.swing.JTextField FieldFolio;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
